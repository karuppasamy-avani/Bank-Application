spring:
  application:
    name: notification-service

  datasource:
    url: jdbc:mysql://localhost:3306/notification_db
    username: root
    password: Aspire@123
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
 
  mail:
    host: smtp.gmail.com
    port: 587
    username: cservice.bankofindia@gmail.com
    password: vekn dcuk dcxe fzkq
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: 
#      - b-3.bankingmskcluster.canhri.c4.kafka.eu-north-1.amazonaws.com:9092
#      - b-1.bankingmskcluster.canhri.c4.kafka.eu-north-1.amazonaws.com:9092
#      - b-2.bankingmskcluster.canhri.c4.kafka.eu-north-1.amazonaws.com:9092
       localhost:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      properties:
#        spring.json.add.type.headers: true
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest 
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: "com.bankofindia.account_service.model.externaldto.NotificationDto:com.bankofindia.notification_service.model.dto.NotificationDto"
    
#eureka:
#  client:
#    register-with-eureka: true
#    fetch-registry: true

server:
  port: 8200
